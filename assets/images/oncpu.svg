<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1800" height="518" onload="init(evt)" viewBox="0 0 1800 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1800.0" height="518.0" fill="url(#background)"  />
<text id="title" x="900.00" y="24" >On-CPU Time Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1690.00" y="24" >Search</text>
<text id="ignorecase" x="1774.00" y="24" >ic</text>
<text id="matched" x="1690.00" y="501" > </text>
<g id="frames">
<g >
<title>__tcp_send_ack.part.0 (1 samples, 1.49%)</title><rect x="249.1" y="277" width="26.6" height="15.0" fill="rgb(236,128,34)" rx="2" ry="2" />
<text  x="252.10" y="287.5" >_..</text>
</g>
<g >
<title>lock_sock_nested (6 samples, 8.96%)</title><rect x="408.5" y="277" width="159.4" height="15.0" fill="rgb(236,151,34)" rx="2" ry="2" />
<text  x="411.51" y="287.5" >lock_sock_nested</text>
</g>
<g >
<title>__GI___libc_read (58 samples, 86.57%)</title><rect x="10.0" y="421" width="1540.9" height="15.0" fill="rgb(241,119,40)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >__GI___libc_read</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 1.49%)</title><rect x="1364.9" y="181" width="26.6" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="1367.93" y="191.5" >i..</text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 1.49%)</title><rect x="328.8" y="165" width="26.6" height="15.0" fill="rgb(236,187,34)" rx="2" ry="2" />
<text  x="331.81" y="175.5" >d..</text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 2.99%)</title><rect x="302.2" y="229" width="53.2" height="15.0" fill="rgb(236,141,34)" rx="2" ry="2" />
<text  x="305.24" y="239.5" >__dev..</text>
</g>
<g >
<title>__dev_xmit_skb (2 samples, 2.99%)</title><rect x="302.2" y="213" width="53.2" height="15.0" fill="rgb(236,141,34)" rx="2" ry="2" />
<text  x="305.24" y="223.5" >__dev..</text>
</g>
<g >
<title>__fdget (1 samples, 1.49%)</title><rect x="1604.0" y="325" width="26.6" height="15.0" fill="rgb(236,135,34)" rx="2" ry="2" />
<text  x="1607.03" y="335.5" >_..</text>
</g>
<g >
<title>_copy_from_user (1 samples, 1.49%)</title><rect x="1577.5" y="341" width="26.5" height="15.0" fill="rgb(236,180,34)" rx="2" ry="2" />
<text  x="1580.46" y="351.5" >_..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (6 samples, 8.96%)</title><rect x="408.5" y="229" width="159.4" height="15.0" fill="rgb(236,158,34)" rx="2" ry="2" />
<text  x="411.51" y="239.5" >native_queued_spin_l..</text>
</g>
<g >
<title>common_interrupt (1 samples, 1.49%)</title><rect x="381.9" y="261" width="26.6" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="384.94" y="271.5" >c..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 1.49%)</title><rect x="196.0" y="197" width="26.5" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="198.97" y="207.5" >d..</text>
</g>
<g >
<title>tcp_mstamp_refresh (1 samples, 1.49%)</title><rect x="567.9" y="197" width="26.6" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="570.91" y="207.5" >t..</text>
</g>
<g >
<title>do_softirq_own_stack (5 samples, 7.46%)</title><rect x="647.6" y="165" width="132.8" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="650.61" y="175.5" >do_softirq_own_s..</text>
</g>
<g >
<title>__select (7 samples, 10.45%)</title><rect x="1550.9" y="437" width="186.0" height="15.0" fill="rgb(241,132,39)" rx="2" ry="2" />
<text  x="1553.90" y="447.5" >__select</text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 1.49%)</title><rect x="328.8" y="181" width="26.6" height="15.0" fill="rgb(236,164,34)" rx="2" ry="2" />
<text  x="331.81" y="191.5" >s..</text>
</g>
<g >
<title>napi_gro_flush (1 samples, 1.49%)</title><rect x="753.9" y="37" width="26.5" height="15.0" fill="rgb(236,171,34)" rx="2" ry="2" />
<text  x="756.88" y="47.5" >n..</text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 1.49%)</title><rect x="142.8" y="53" width="26.6" height="15.0" fill="rgb(236,131,34)" rx="2" ry="2" />
<text  x="145.84" y="63.5" >r..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 1.49%)</title><rect x="1550.9" y="325" width="26.6" height="15.0" fill="rgb(236,140,34)" rx="2" ry="2" />
<text  x="1553.90" y="335.5" >c..</text>
</g>
<g >
<title>net_rx_action (1 samples, 1.49%)</title><rect x="1657.2" y="197" width="26.5" height="15.0" fill="rgb(236,194,34)" rx="2" ry="2" />
<text  x="1660.16" y="207.5" >n..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 1.49%)</title><rect x="381.9" y="213" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="384.94" y="223.5" >a..</text>
</g>
<g >
<title>inet6_recvmsg (48 samples, 71.64%)</title><rect x="169.4" y="309" width="1275.2" height="15.0" fill="rgb(236,173,34)" rx="2" ry="2" />
<text  x="172.40" y="319.5" >inet6_recvmsg</text>
</g>
<g >
<title>simple_copy_to_iter (1 samples, 1.49%)</title><rect x="1364.9" y="245" width="26.6" height="15.0" fill="rgb(236,156,34)" rx="2" ry="2" />
<text  x="1367.93" y="255.5" >s..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (27 samples, 40.30%)</title><rect x="647.6" y="229" width="717.3" height="15.0" fill="rgb(236,140,34)" rx="2" ry="2" />
<text  x="650.61" y="239.5" >copy_user_enhanced_fast_string</text>
</g>
<g >
<title>common_interrupt (1 samples, 1.49%)</title><rect x="196.0" y="229" width="26.5" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="198.97" y="239.5" >c..</text>
</g>
<g >
<title>net_rx_action (1 samples, 1.49%)</title><rect x="1657.2" y="181" width="26.5" height="15.0" fill="rgb(236,194,34)" rx="2" ry="2" />
<text  x="1660.16" y="191.5" >n..</text>
</g>
<g >
<title>common_interrupt (1 samples, 1.49%)</title><rect x="1604.0" y="293" width="26.6" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="1607.03" y="303.5" >c..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="196.0" y="149" width="26.5" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="198.97" y="159.5" >_..</text>
</g>
<g >
<title>__release_sock (1 samples, 1.49%)</title><rect x="567.9" y="261" width="26.6" height="15.0" fill="rgb(236,135,34)" rx="2" ry="2" />
<text  x="570.91" y="271.5" >_..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 1.49%)</title><rect x="1604.0" y="277" width="26.6" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="1607.03" y="287.5" >i..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 1.49%)</title><rect x="1524.3" y="373" width="26.6" height="15.0" fill="rgb(236,167,34)" rx="2" ry="2" />
<text  x="1527.33" y="383.5" >s..</text>
</g>
<g >
<title>napi_complete_done (1 samples, 1.49%)</title><rect x="753.9" y="69" width="26.5" height="15.0" fill="rgb(236,171,34)" rx="2" ry="2" />
<text  x="756.88" y="79.5" >n..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="1604.0" y="229" width="26.6" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="1607.03" y="239.5" >_..</text>
</g>
<g >
<title>common_interrupt (1 samples, 1.49%)</title><rect x="1657.2" y="277" width="26.5" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="1660.16" y="287.5" >c..</text>
</g>
<g >
<title>sock_rfree (1 samples, 1.49%)</title><rect x="222.5" y="229" width="26.6" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="225.54" y="239.5" >s..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 1.49%)</title><rect x="1364.9" y="149" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1367.93" y="159.5" >a..</text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 2.99%)</title><rect x="302.2" y="245" width="53.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="305.24" y="255.5" >ip_fi..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 1.49%)</title><rect x="196.0" y="213" width="26.5" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="198.97" y="223.5" >i..</text>
</g>
<g >
<title>sock_read_iter (51 samples, 76.12%)</title><rect x="142.8" y="325" width="1355.0" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="145.84" y="335.5" >sock_read_iter</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 1.49%)</title><rect x="1550.9" y="341" width="26.6" height="15.0" fill="rgb(236,140,34)" rx="2" ry="2" />
<text  x="1553.90" y="351.5" >c..</text>
</g>
<g >
<title>__ip_local_out (1 samples, 1.49%)</title><rect x="275.7" y="245" width="26.5" height="15.0" fill="rgb(236,125,34)" rx="2" ry="2" />
<text  x="278.67" y="255.5" >_..</text>
</g>
<g >
<title>napi_poll (2 samples, 2.99%)</title><rect x="727.3" y="101" width="53.1" height="15.0" fill="rgb(236,171,34)" rx="2" ry="2" />
<text  x="730.31" y="111.5" >napi_..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="1604.0" y="213" width="26.6" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="1607.03" y="223.5" >_..</text>
</g>
<g >
<title>net_rx_action (2 samples, 2.99%)</title><rect x="727.3" y="117" width="53.1" height="15.0" fill="rgb(236,194,34)" rx="2" ry="2" />
<text  x="730.31" y="127.5" >net_r..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="196.0" y="165" width="26.5" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="198.97" y="175.5" >_..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 1.49%)</title><rect x="249.1" y="261" width="26.6" height="15.0" fill="rgb(236,151,34)" rx="2" ry="2" />
<text  x="252.10" y="271.5" >_..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 1.49%)</title><rect x="381.9" y="245" width="26.6" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="384.94" y="255.5" >i..</text>
</g>
<g >
<title>sock_recvmsg (1 samples, 1.49%)</title><rect x="1471.2" y="293" width="26.6" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="1474.19" y="303.5" >s..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 1.49%)</title><rect x="142.8" y="85" width="26.6" height="15.0" fill="rgb(236,170,34)" rx="2" ry="2" />
<text  x="145.84" y="95.5" >g..</text>
</g>
<g >
<title>ena_alloc_rx_buffer (1 samples, 1.49%)</title><rect x="142.8" y="133" width="26.6" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="145.84" y="143.5" >e..</text>
</g>
<g >
<title>xmit_one.constprop.0 (1 samples, 1.49%)</title><rect x="328.8" y="149" width="26.6" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="331.81" y="159.5" >x..</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 10.45%)</title><rect x="1550.9" y="405" width="186.0" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="1553.90" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>common_interrupt (1 samples, 1.49%)</title><rect x="142.8" y="293" width="26.6" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="145.84" y="303.5" >c..</text>
</g>
<g >
<title>sock_rfree (1 samples, 1.49%)</title><rect x="222.5" y="245" width="26.6" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="225.54" y="255.5" >s..</text>
</g>
<g >
<title>asm_common_interrupt (5 samples, 7.46%)</title><rect x="647.6" y="213" width="132.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="650.61" y="223.5" >asm_common_inter..</text>
</g>
<g >
<title>dev_queue_xmit_nit (1 samples, 1.49%)</title><rect x="328.8" y="117" width="26.6" height="15.0" fill="rgb(236,187,34)" rx="2" ry="2" />
<text  x="331.81" y="127.5" >d..</text>
</g>
<g >
<title>tcp_mstamp_refresh (1 samples, 1.49%)</title><rect x="567.9" y="213" width="26.6" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="570.91" y="223.5" >t..</text>
</g>
<g >
<title>schedule (1 samples, 1.49%)</title><rect x="1683.7" y="309" width="26.6" height="15.0" fill="rgb(236,164,34)" rx="2" ry="2" />
<text  x="1686.73" y="319.5" >s..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="1364.9" y="117" width="26.6" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="1367.93" y="127.5" >_..</text>
</g>
<g >
<title>kern_select (7 samples, 10.45%)</title><rect x="1550.9" y="373" width="186.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1553.90" y="383.5" >kern_select</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 1.49%)</title><rect x="381.9" y="229" width="26.6" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="384.94" y="239.5" >d..</text>
</g>
<g >
<title>ksys_read (52 samples, 77.61%)</title><rect x="142.8" y="373" width="1381.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="145.84" y="383.5" >ksys_read</text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 1.49%)</title><rect x="1364.9" y="213" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1367.93" y="223.5" >a..</text>
</g>
<g >
<title>ena_io_poll (1 samples, 1.49%)</title><rect x="142.8" y="181" width="26.6" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="145.84" y="191.5" >e..</text>
</g>
<g >
<title>skb_release_head_state (2 samples, 2.99%)</title><rect x="196.0" y="261" width="53.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="198.97" y="271.5" >skb_r..</text>
</g>
<g >
<title>ip_send_check (1 samples, 1.49%)</title><rect x="275.7" y="229" width="26.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="278.67" y="239.5" >i..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (3 samples, 4.48%)</title><rect x="1630.6" y="325" width="79.7" height="15.0" fill="rgb(236,164,34)" rx="2" ry="2" />
<text  x="1633.60" y="335.5" >schedule_..</text>
</g>
<g >
<title>security_file_permission (1 samples, 1.49%)</title><rect x="1497.8" y="325" width="26.5" height="15.0" fill="rgb(236,170,34)" rx="2" ry="2" />
<text  x="1500.76" y="335.5" >s..</text>
</g>
<g >
<title>ena_clean_rx_irq (1 samples, 1.49%)</title><rect x="727.3" y="69" width="26.6" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="730.31" y="79.5" >e..</text>
</g>
<g >
<title>tcp_established_options (1 samples, 1.49%)</title><rect x="355.4" y="261" width="26.5" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="358.37" y="271.5" >t..</text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 1.49%)</title><rect x="142.8" y="309" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="145.84" y="319.5" >a..</text>
</g>
<g >
<title>iperf_run_server (2 samples, 2.99%)</title><rect x="1736.9" y="437" width="53.1" height="15.0" fill="rgb(238,163,37)" rx="2" ry="2" />
<text  x="1739.87" y="447.5" >iperf..</text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 1.49%)</title><rect x="1657.2" y="293" width="26.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1660.16" y="303.5" >a..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="1364.9" y="133" width="26.6" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="1367.93" y="143.5" >_..</text>
</g>
<g >
<title>napi_poll (1 samples, 1.49%)</title><rect x="142.8" y="197" width="26.6" height="15.0" fill="rgb(236,171,34)" rx="2" ry="2" />
<text  x="145.84" y="207.5" >n..</text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 1.49%)</title><rect x="249.1" y="245" width="26.6" height="15.0" fill="rgb(236,107,34)" rx="2" ry="2" />
<text  x="252.10" y="255.5" >k..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="142.8" y="229" width="26.6" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="145.84" y="239.5" >_..</text>
</g>
<g >
<title>ena_alloc_map_page (1 samples, 1.49%)</title><rect x="142.8" y="117" width="26.6" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="145.84" y="127.5" >e..</text>
</g>
<g >
<title>irq_exit_rcu (5 samples, 7.46%)</title><rect x="647.6" y="181" width="132.8" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="650.61" y="191.5" >irq_exit_rcu</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 1.49%)</title><rect x="142.8" y="245" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="145.84" y="255.5" >a..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="1657.2" y="213" width="26.5" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="1660.16" y="223.5" >_..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 2.99%)</title><rect x="1630.6" y="309" width="53.1" height="15.0" fill="rgb(236,166,34)" rx="2" ry="2" />
<text  x="1633.60" y="319.5" >_raw_..</text>
</g>
<g >
<title>security_file_permission (1 samples, 1.49%)</title><rect x="1497.8" y="341" width="26.5" height="15.0" fill="rgb(236,170,34)" rx="2" ry="2" />
<text  x="1500.76" y="351.5" >s..</text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 1.49%)</title><rect x="1391.5" y="277" width="26.6" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="1394.49" y="287.5" >t..</text>
</g>
<g >
<title>common_interrupt (5 samples, 7.46%)</title><rect x="647.6" y="197" width="132.8" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="650.61" y="207.5" >common_interrupt</text>
</g>
<g >
<title>memset_erms (1 samples, 1.49%)</title><rect x="1710.3" y="325" width="26.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1713.30" y="335.5" >m..</text>
</g>
<g >
<title>ena_io_poll (2 samples, 2.99%)</title><rect x="727.3" y="85" width="53.1" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="730.31" y="95.5" >ena_i..</text>
</g>
<g >
<title>rmqueue_pcplist.constprop.0 (1 samples, 1.49%)</title><rect x="142.8" y="37" width="26.6" height="15.0" fill="rgb(236,131,34)" rx="2" ry="2" />
<text  x="145.84" y="47.5" >r..</text>
</g>
<g >
<title>ena_refill_rx_bufs (1 samples, 1.49%)</title><rect x="142.8" y="149" width="26.6" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="145.84" y="159.5" >e..</text>
</g>
<g >
<title>[unknown] (58 samples, 86.57%)</title><rect x="10.0" y="437" width="1540.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >[unknown]</text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 1.49%)</title><rect x="1524.3" y="357" width="26.6" height="15.0" fill="rgb(236,167,34)" rx="2" ry="2" />
<text  x="1527.33" y="367.5" >s..</text>
</g>
<g >
<title>__x64_sys_select (7 samples, 10.45%)</title><rect x="1550.9" y="389" width="186.0" height="15.0" fill="rgb(236,154,34)" rx="2" ry="2" />
<text  x="1553.90" y="399.5" >__x64_sys_select</text>
</g>
<g >
<title>should_failslab (1 samples, 1.49%)</title><rect x="249.1" y="229" width="26.6" height="15.0" fill="rgb(236,155,34)" rx="2" ry="2" />
<text  x="252.10" y="239.5" >s..</text>
</g>
<g >
<title>__tcp_transmit_skb (4 samples, 5.97%)</title><rect x="275.7" y="277" width="106.2" height="15.0" fill="rgb(236,128,34)" rx="2" ry="2" />
<text  x="278.67" y="287.5" >__tcp_transmi..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 1.49%)</title><rect x="142.8" y="277" width="26.6" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="145.84" y="287.5" >i..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="381.9" y="181" width="26.6" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="384.94" y="191.5" >_..</text>
</g>
<g >
<title>_copy_from_user (1 samples, 1.49%)</title><rect x="1550.9" y="357" width="26.6" height="15.0" fill="rgb(236,180,34)" rx="2" ry="2" />
<text  x="1553.90" y="367.5" >_..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 1.49%)</title><rect x="196.0" y="181" width="26.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="198.97" y="191.5" >a..</text>
</g>
<g >
<title>should_failslab (1 samples, 1.49%)</title><rect x="249.1" y="213" width="26.6" height="15.0" fill="rgb(236,155,34)" rx="2" ry="2" />
<text  x="252.10" y="223.5" >s..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (6 samples, 8.96%)</title><rect x="408.5" y="245" width="159.4" height="15.0" fill="rgb(236,158,34)" rx="2" ry="2" />
<text  x="411.51" y="255.5" >native_queued_spin_l..</text>
</g>
<g >
<title>release_sock (1 samples, 1.49%)</title><rect x="567.9" y="277" width="26.6" height="15.0" fill="rgb(236,187,34)" rx="2" ry="2" />
<text  x="570.91" y="287.5" >r..</text>
</g>
<g >
<title>schedule (1 samples, 1.49%)</title><rect x="1683.7" y="293" width="26.6" height="15.0" fill="rgb(236,164,34)" rx="2" ry="2" />
<text  x="1686.73" y="303.5" >s..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 1.49%)</title><rect x="567.9" y="245" width="26.6" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="570.91" y="255.5" >t..</text>
</g>
<g >
<title>__skb_datagram_iter (30 samples, 44.78%)</title><rect x="594.5" y="261" width="797.0" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="597.48" y="271.5" >__skb_datagram_iter</text>
</g>
<g >
<title>tcp_recvmsg (48 samples, 71.64%)</title><rect x="169.4" y="293" width="1275.2" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="172.40" y="303.5" >tcp_recvmsg</text>
</g>
<g >
<title>net_rx_action (1 samples, 1.49%)</title><rect x="142.8" y="213" width="26.6" height="15.0" fill="rgb(236,194,34)" rx="2" ry="2" />
<text  x="145.84" y="223.5" >n..</text>
</g>
<g >
<title>__qdisc_run (1 samples, 1.49%)</title><rect x="328.8" y="197" width="26.6" height="15.0" fill="rgb(236,138,34)" rx="2" ry="2" />
<text  x="331.81" y="207.5" >_..</text>
</g>
<g >
<title>skb_release_data (1 samples, 1.49%)</title><rect x="169.4" y="245" width="26.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="172.40" y="255.5" >s..</text>
</g>
<g >
<title>iperf3 (67 samples, 100.00%)</title><rect x="10.0" y="453" width="1780.0" height="15.0" fill="rgb(245,163,44)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >iperf3</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 1.49%)</title><rect x="1630.6" y="293" width="26.6" height="15.0" fill="rgb(236,166,34)" rx="2" ry="2" />
<text  x="1633.60" y="303.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (53 samples, 79.10%)</title><rect x="142.8" y="389" width="1408.1" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="145.84" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 1.49%)</title><rect x="196.0" y="245" width="26.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="198.97" y="255.5" >a..</text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 1.49%)</title><rect x="1418.1" y="277" width="26.5" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="1421.06" y="287.5" >t..</text>
</g>
<g >
<title>ktime_get (1 samples, 1.49%)</title><rect x="1391.5" y="245" width="26.6" height="15.0" fill="rgb(236,114,34)" rx="2" ry="2" />
<text  x="1394.49" y="255.5" >k..</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 1.49%)</title><rect x="567.9" y="229" width="26.6" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="570.91" y="239.5" >t..</text>
</g>
<g >
<title>core_sys_select (6 samples, 8.96%)</title><rect x="1577.5" y="357" width="159.4" height="15.0" fill="rgb(236,133,34)" rx="2" ry="2" />
<text  x="1580.46" y="367.5" >core_sys_select</text>
</g>
<g >
<title>read_tsc (1 samples, 1.49%)</title><rect x="1391.5" y="213" width="26.6" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="1394.49" y="223.5" >r..</text>
</g>
<g >
<title>_copy_to_iter (2 samples, 2.99%)</title><rect x="594.5" y="229" width="53.1" height="15.0" fill="rgb(236,180,34)" rx="2" ry="2" />
<text  x="597.48" y="239.5" >_copy..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 1.49%)</title><rect x="142.8" y="261" width="26.6" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="145.84" y="271.5" >d..</text>
</g>
<g >
<title>sock_recvmsg (1 samples, 1.49%)</title><rect x="1471.2" y="309" width="26.6" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="1474.19" y="319.5" >s..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 1.49%)</title><rect x="1577.5" y="325" width="26.5" height="15.0" fill="rgb(236,140,34)" rx="2" ry="2" />
<text  x="1580.46" y="335.5" >c..</text>
</g>
<g >
<title>__check_object_size (1 samples, 1.49%)</title><rect x="1364.9" y="229" width="26.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1367.93" y="239.5" >_..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 1.49%)</title><rect x="1657.2" y="245" width="26.5" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="1660.16" y="255.5" >d..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 1.49%)</title><rect x="1657.2" y="229" width="26.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1660.16" y="239.5" >a..</text>
</g>
<g >
<title>ip_send_check (1 samples, 1.49%)</title><rect x="275.7" y="213" width="26.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="278.67" y="223.5" >i..</text>
</g>
<g >
<title>[unknown] (1 samples, 1.49%)</title><rect x="1763.4" y="421" width="26.6" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="1766.43" y="431.5" >[..</text>
</g>
<g >
<title>tcp_established_options (1 samples, 1.49%)</title><rect x="355.4" y="245" width="26.5" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="358.37" y="255.5" >t..</text>
</g>
<g >
<title>__dev_xmit_skb (1 samples, 1.49%)</title><rect x="302.2" y="197" width="26.6" height="15.0" fill="rgb(236,141,34)" rx="2" ry="2" />
<text  x="305.24" y="207.5" >_..</text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 1.49%)</title><rect x="381.9" y="277" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="384.94" y="287.5" >a..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 1.49%)</title><rect x="1364.9" y="165" width="26.6" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="1367.93" y="175.5" >d..</text>
</g>
<g >
<title>ena_clean_rx_irq (1 samples, 1.49%)</title><rect x="142.8" y="165" width="26.6" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="145.84" y="175.5" >e..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 1.49%)</title><rect x="1577.5" y="309" width="26.5" height="15.0" fill="rgb(236,140,34)" rx="2" ry="2" />
<text  x="1580.46" y="319.5" >c..</text>
</g>
<g >
<title>common_interrupt (1 samples, 1.49%)</title><rect x="1364.9" y="197" width="26.6" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="1367.93" y="207.5" >c..</text>
</g>
<g >
<title>all (67 samples, 100%)</title><rect x="10.0" y="469" width="1780.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 1.49%)</title><rect x="1604.0" y="245" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1607.03" y="255.5" >a..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (22 samples, 32.84%)</title><rect x="780.4" y="213" width="584.5" height="15.0" fill="rgb(236,140,34)" rx="2" ry="2" />
<text  x="783.45" y="223.5" >copy_user_enhanced_fast_string</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 10.45%)</title><rect x="1550.9" y="421" width="186.0" height="15.0" fill="rgb(236,196,34)" rx="2" ry="2" />
<text  x="1553.90" y="431.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>dev_queue_xmit_nit (1 samples, 1.49%)</title><rect x="328.8" y="133" width="26.6" height="15.0" fill="rgb(236,187,34)" rx="2" ry="2" />
<text  x="331.81" y="143.5" >d..</text>
</g>
<g >
<title>memset_erms (1 samples, 1.49%)</title><rect x="1710.3" y="341" width="26.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1713.30" y="351.5" >m..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 1.49%)</title><rect x="1604.0" y="261" width="26.6" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="1607.03" y="271.5" >d..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.49%)</title><rect x="381.9" y="197" width="26.6" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="384.94" y="207.5" >_..</text>
</g>
<g >
<title>_copy_to_iter (29 samples, 43.28%)</title><rect x="594.5" y="245" width="770.4" height="15.0" fill="rgb(236,180,34)" rx="2" ry="2" />
<text  x="597.48" y="255.5" >_copy_to_iter</text>
</g>
<g >
<title>new_sync_read (51 samples, 76.12%)</title><rect x="142.8" y="341" width="1355.0" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="145.84" y="351.5" >new_sync_read</text>
</g>
<g >
<title>read_tsc (1 samples, 1.49%)</title><rect x="1391.5" y="229" width="26.6" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="1394.49" y="239.5" >r..</text>
</g>
<g >
<title>__kfree_skb (3 samples, 4.48%)</title><rect x="169.4" y="277" width="79.7" height="15.0" fill="rgb(236,119,34)" rx="2" ry="2" />
<text  x="172.40" y="287.5" >__kfree_skb</text>
</g>
<g >
<title>do_select (4 samples, 5.97%)</title><rect x="1604.0" y="341" width="106.3" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="1607.03" y="351.5" >do_select</text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 1.49%)</title><rect x="1604.0" y="309" width="26.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1607.03" y="319.5" >a..</text>
</g>
<g >
<title>skb_copy_datagram_iter (30 samples, 44.78%)</title><rect x="594.5" y="277" width="797.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="597.48" y="287.5" >skb_copy_datagram_iter</text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 7.46%)</title><rect x="647.6" y="133" width="132.8" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="650.61" y="143.5" >__softirqentry_t..</text>
</g>
<g >
<title>skb_release_data (1 samples, 1.49%)</title><rect x="169.4" y="261" width="26.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="172.40" y="271.5" >s..</text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 4.48%)</title><rect x="647.6" y="117" width="79.7" height="15.0" fill="rgb(236,132,34)" rx="2" ry="2" />
<text  x="650.61" y="127.5" >__softirq..</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (5 samples, 7.46%)</title><rect x="647.6" y="149" width="132.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="650.61" y="159.5" >asm_call_sysvec_..</text>
</g>
<g >
<title>sock_read_iter (1 samples, 1.49%)</title><rect x="1444.6" y="309" width="26.6" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="1447.63" y="319.5" >s..</text>
</g>
<g >
<title>rmqueue (1 samples, 1.49%)</title><rect x="142.8" y="69" width="26.6" height="15.0" fill="rgb(236,131,34)" rx="2" ry="2" />
<text  x="145.84" y="79.5" >r..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53 samples, 79.10%)</title><rect x="142.8" y="405" width="1408.1" height="15.0" fill="rgb(236,196,34)" rx="2" ry="2" />
<text  x="145.84" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>ena_clean_rx_irq (1 samples, 1.49%)</title><rect x="727.3" y="53" width="26.6" height="15.0" fill="rgb(236,218,34)" rx="2" ry="2" />
<text  x="730.31" y="63.5" >e..</text>
</g>
<g >
<title>napi_gro_flush (1 samples, 1.49%)</title><rect x="753.9" y="53" width="26.5" height="15.0" fill="rgb(236,171,34)" rx="2" ry="2" />
<text  x="756.88" y="63.5" >n..</text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 8.96%)</title><rect x="408.5" y="261" width="159.4" height="15.0" fill="rgb(236,166,34)" rx="2" ry="2" />
<text  x="411.51" y="271.5" >_raw_spin_lock_bh</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 1.49%)</title><rect x="142.8" y="101" width="26.6" height="15.0" fill="rgb(236,151,34)" rx="2" ry="2" />
<text  x="145.84" y="111.5" >_..</text>
</g>
<g >
<title>tcp_mstamp_refresh (1 samples, 1.49%)</title><rect x="1391.5" y="261" width="26.6" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="1394.49" y="271.5" >t..</text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 1.49%)</title><rect x="1657.2" y="261" width="26.5" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="1660.16" y="271.5" >i..</text>
</g>
<g >
<title>__ip_queue_xmit (3 samples, 4.48%)</title><rect x="275.7" y="261" width="79.7" height="15.0" fill="rgb(236,125,34)" rx="2" ry="2" />
<text  x="278.67" y="271.5" >__ip_queu..</text>
</g>
<g >
<title>vfs_read (52 samples, 77.61%)</title><rect x="142.8" y="357" width="1381.5" height="15.0" fill="rgb(236,128,34)" rx="2" ry="2" />
<text  x="145.84" y="367.5" >vfs_read</text>
</g>
</g>
</svg>
